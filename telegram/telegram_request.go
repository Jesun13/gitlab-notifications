package telegram

import (
	"fmt"
	"gitlab-notificatons/config"
	"io"
	"log"
	"net/http"
	"net/url"
	"strings"
)

func sendTelegramRequest(endpoint string, params url.Values) error {
	apiURL := fmt.Sprintf("https://api.telegram.org/bot%s/%s", config.TelegramBotToken, endpoint)

	resp, err := http.Post(apiURL, "application/x-www-form-urlencoded", strings.NewReader(params.Encode()))
	if err != nil {
		log.Printf("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞–ø—Ä–æ—Å–∞ –≤ Telegram: %v", err)
		return err
	}
	defer resp.Body.Close()

	body, _ := io.ReadAll(resp.Body)

	if resp.StatusCode != http.StatusOK {
		log.Printf("‚ùå Telegram API –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: %s, %s", resp.Status, apiURL)
		log.Printf("üì¶ –û—Ç–≤–µ—Ç Telegram: %s", string(body)) // <-- –õ–û–ì –¢–ï–õ–ê –û–®–ò–ë–ö–ò
		return fmt.Errorf("–Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –≤ Telegram. –°—Ç–∞—Ç—É—Å: %s", resp.Status)
	}

	log.Printf("‚úÖ –ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram (endpoint: %s)", endpoint)
	return nil
}
